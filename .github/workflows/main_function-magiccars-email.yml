# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - function-magiccars-email

on:
  push:
    branches:
      - main # or master, depending on your default branch
  workflow_dispatch: # Allows manual trigger of the workflow

env:
  AZURE_FUNCTIONAPP_NAME: function-magiccars-email # Replace with your Function App name
  PYTHON_VERSION: '3.12' # Recommended Python version for Azure Functions (e.g., 3.9, 3.10, 3.11)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # This is required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies and prepare for deployment
        run: |
          python -m pip install --upgrade pip
          # Install dependencies into a deployable folder, required by Azure Functions
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"

      # Optional: Add step to run tests here (e.g., pytest)

      - name: Zip function app content
        # This command zips everything needed for the function app, excluding unnecessary files
        run: |
          zip -r release.zip . -x ".git/*" -x ".github/*" -x ".venv/*" -x "__pycache__/*" -x "uv.lock" -x "*.yml" -x "*.md" # Adjust exclusions as needed

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-function-app-package # A more descriptive name
          path: release.zip # Upload the created zip file

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-function-app-package # Use the same name as in upload-artifact

      # The package.zip will be downloaded to the root of the runner's workspace

      - name: 'Deploy to Azure Functions'
        uses: azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          slot-name: 'Production' # Unless you're using deployment slots, this is usually the default.
          package: release.zip # Pass the path to the downloaded zip file directly
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E63A6676DB544B59989BEAD9C56F9231 }} # Ensure this secret is configured in GitHub
          scm-do-build-during-deployment: true
          enable-oryx-build: true